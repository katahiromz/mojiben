// Moji No Benkyo (5)
// Copyright (C) 2019-2025 Katayama Hirofumi MZ <katayama.hirofumi.mz@gmail.com>
// This file is public domain software.

#include <windows.h>

#include <vector>
#include <map>
#include <cassert>

#include "kakijun.h"

// Kakijun region data
KAKIJUN g_kanji2_kakijun;
INT g_map[160];

static const BYTE kanji000_00[816] = {
0x20,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x31,0x00,0x00,0x00,0x10,0x03,0x00,0x00,
0x10,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x1A,0x01,0x00,0x00,0xA9,0x00,0x00,0x00,
0xF9,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x01,0x01,0x00,0x00,0x81,0x00,0x00,0x00,
0xF5,0x00,0x00,0x00,0x81,0x00,0x00,0x00,0x04,0x01,0x00,0x00,0x82,0x00,0x00,0x00,
0xF0,0x00,0x00,0x00,0x82,0x00,0x00,0x00,0x07,0x01,0x00,0x00,0x83,0x00,0x00,0x00,
0xE9,0x00,0x00,0x00,0x83,0x00,0x00,0x00,0x09,0x01,0x00,0x00,0x84,0x00,0x00,0x00,
0xD0,0x00,0x00,0x00,0x84,0x00,0x00,0x00,0x0B,0x01,0x00,0x00,0x85,0x00,0x00,0x00,
0xB5,0x00,0x00,0x00,0x85,0x00,0x00,0x00,0x0D,0x01,0x00,0x00,0x86,0x00,0x00,0x00,
0x9D,0x00,0x00,0x00,0x86,0x00,0x00,0x00,0x0F,0x01,0x00,0x00,0x87,0x00,0x00,0x00,
0x8A,0x00,0x00,0x00,0x87,0x00,0x00,0x00,0x10,0x01,0x00,0x00,0x88,0x00,0x00,0x00,
0x7D,0x00,0x00,0x00,0x88,0x00,0x00,0x00,0x12,0x01,0x00,0x00,0x89,0x00,0x00,0x00,
0x6F,0x00,0x00,0x00,0x89,0x00,0x00,0x00,0x14,0x01,0x00,0x00,0x8A,0x00,0x00,0x00,
0x64,0x00,0x00,0x00,0x8A,0x00,0x00,0x00,0x15,0x01,0x00,0x00,0x8B,0x00,0x00,0x00,
0x5A,0x00,0x00,0x00,0x8B,0x00,0x00,0x00,0x16,0x01,0x00,0x00,0x8C,0x00,0x00,0x00,
0x12,0x00,0x00,0x00,0x8C,0x00,0x00,0x00,0x17,0x00,0x00,0x00,0x8D,0x00,0x00,0x00,
0x51,0x00,0x00,0x00,0x8C,0x00,0x00,0x00,0x17,0x01,0x00,0x00,0x8D,0x00,0x00,0x00,
0x11,0x00,0x00,0x00,0x8D,0x00,0x00,0x00,0x19,0x00,0x00,0x00,0x8E,0x00,0x00,0x00,
0x49,0x00,0x00,0x00,0x8D,0x00,0x00,0x00,0x18,0x01,0x00,0x00,0x8E,0x00,0x00,0x00,
0x10,0x00,0x00,0x00,0x8E,0x00,0x00,0x00,0x1B,0x00,0x00,0x00,0x8F,0x00,0x00,0x00,
0x41,0x00,0x00,0x00,0x8E,0x00,0x00,0x00,0x19,0x01,0x00,0x00,0x8F,0x00,0x00,0x00,
0x10,0x00,0x00,0x00,0x8F,0x00,0x00,0x00,0x1D,0x00,0x00,0x00,0x90,0x00,0x00,0x00,
0x3A,0x00,0x00,0x00,0x8F,0x00,0x00,0x00,0x19,0x01,0x00,0x00,0x90,0x00,0x00,0x00,
0x10,0x00,0x00,0x00,0x90,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x91,0x00,0x00,0x00,
0x34,0x00,0x00,0x00,0x90,0x00,0x00,0x00,0x1A,0x01,0x00,0x00,0x91,0x00,0x00,0x00,
0x10,0x00,0x00,0x00,0x91,0x00,0x00,0x00,0x23,0x00,0x00,0x00,0x92,0x00,0x00,0x00,
0x2E,0x00,0x00,0x00,0x91,0x00,0x00,0x00,0x1A,0x01,0x00,0x00,0x92,0x00,0x00,0x00,
0x10,0x00,0x00,0x00,0x92,0x00,0x00,0x00,0x1A,0x01,0x00,0x00,0x94,0x00,0x00,0x00,
0x11,0x00,0x00,0x00,0x94,0x00,0x00,0x00,0x1A,0x01,0x00,0x00,0x96,0x00,0x00,0x00,
0x12,0x00,0x00,0x00,0x96,0x00,0x00,0x00,0xA6,0x00,0x00,0x00,0x97,0x00,0x00,0x00,
0xE4,0x00,0x00,0x00,0x96,0x00,0x00,0x00,0x19,0x01,0x00,0x00,0x97,0x00,0x00,0x00,
0x12,0x00,0x00,0x00,0x97,0x00,0x00,0x00,0x8F,0x00,0x00,0x00,0x98,0x00,0x00,0x00,
0xF3,0x00,0x00,0x00,0x97,0x00,0x00,0x00,0x18,0x01,0x00,0x00,0x98,0x00,0x00,0x00,
0x13,0x00,0x00,0x00,0x98,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x99,0x00,0x00,0x00,
0xFE,0x00,0x00,0x00,0x98,0x00,0x00,0x00,0x16,0x01,0x00,0x00,0x99,0x00,0x00,0x00,
0x13,0x00,0x00,0x00,0x99,0x00,0x00,0x00,0x74,0x00,0x00,0x00,0x9A,0x00,0x00,0x00,
0x08,0x01,0x00,0x00,0x99,0x00,0x00,0x00,0x14,0x01,0x00,0x00,0x9A,0x00,0x00,0x00,
0x14,0x00,0x00,0x00,0x9A,0x00,0x00,0x00,0x6B,0x00,0x00,0x00,0x9B,0x00,0x00,0x00,
0x15,0x00,0x00,0x00,0x9B,0x00,0x00,0x00,0x62,0x00,0x00,0x00,0x9C,0x00,0x00,0x00,
0x16,0x00,0x00,0x00,0x9C,0x00,0x00,0x00,0x5B,0x00,0x00,0x00,0x9D,0x00,0x00,0x00,
0x17,0x00,0x00,0x00,0x9D,0x00,0x00,0x00,0x55,0x00,0x00,0x00,0x9E,0x00,0x00,0x00,
0x18,0x00,0x00,0x00,0x9E,0x00,0x00,0x00,0x4F,0x00,0x00,0x00,0x9F,0x00,0x00,0x00,
0x19,0x00,0x00,0x00,0x9F,0x00,0x00,0x00,0x4B,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,
0x1A,0x00,0x00,0x00,0xA0,0x00,0x00,0x00,0x47,0x00,0x00,0x00,0xA1,0x00,0x00,0x00,
0x1B,0x00,0x00,0x00,0xA1,0x00,0x00,0x00,0x43,0x00,0x00,0x00,0xA2,0x00,0x00,0x00,
0x1C,0x00,0x00,0x00,0xA2,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0xA3,0x00,0x00,0x00,
0x1E,0x00,0x00,0x00,0xA3,0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0xA4,0x00,0x00,0x00,
0x1F,0x00,0x00,0x00,0xA4,0x00,0x00,0x00,0x39,0x00,0x00,0x00,0xA5,0x00,0x00,0x00,
0x21,0x00,0x00,0x00,0xA5,0x00,0x00,0x00,0x36,0x00,0x00,0x00,0xA6,0x00,0x00,0x00,
0x22,0x00,0x00,0x00,0xA6,0x00,0x00,0x00,0x34,0x00,0x00,0x00,0xA7,0x00,0x00,0x00,
0x24,0x00,0x00,0x00,0xA7,0x00,0x00,0x00,0x31,0x00,0x00,0x00,0xA8,0x00,0x00,0x00,
0x26,0x00,0x00,0x00,0xA8,0x00,0x00,0x00,0x2D,0x00,0x00,0x00,0xA9,0x00,0x00,0x00,
};

VOID InitKanji2(VOID)
{
    GA ga;
    std::vector<GA> vga;
    size_t index = 0;
    vga.clear();
        ga.type     = LINEAR;
        ga.angle0   = 0;
        ga.angle1   = 0;
        ga.cx       = 0;
        ga.cy       = 0;
        ga.cb       = sizeof(kanji000_00);
        ga.pb       = kanji000_00;
        vga.push_back(ga);
    g_kanji2_kakijun[index++] = vga;
    vga.clear();
    //assert(index == 160);

    for (int i = 0; i < 160; ++i)
    {
        g_map[i] = i;
    }
}
